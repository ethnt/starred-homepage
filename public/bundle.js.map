{"version":3,"sources":["bundle.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","FlashMessage","self","messageSpacerElement","messageElement","height","animation","init","elem","messageContainer","messageText","menu","bodyWrapper","isClicked","window","document","getElementById","createElement","id","className","style","display","onclick","setInterval","hide","appendChild","top","parentNode","insertBefore","nextSibling","firstChild","show","message","severity","autoCloseMilliSeconds","severityClassName","timerPassed","charAt","toUpperCase","slice","toLowerCase","innerHTML","undefined","setTimeout","clicked","Number","clearInterval","2","$","COMPONENT_ATTR","COMPONENT_SELECTOR","Popup","this","background","popup","titlePane","closeButton","contentPane","buttonPane","popupName","onEnter","onClose","createBackground","backgroundElement","body","createTitlePane","titlePaneElement","createContentPane","closeButtonElement","contentElement","createButtonPane","buttonBarElement","configure","config","functionName","functionIndex","hasOwnProperty","enableToggleListeners","onkeyup","event","keyCode","toggle","target","enableOnEnterListener","onkeydown","offsetWidth","activeElement","tagName","preventDefault","setContentsByElementId","elementId","contentsElement","setTitle","title","titleElement","setButtons","buttons","buttonElement","buttonIndex","removeChild","enableOnEnter","setOnClose","callback","create","additionalClass","popupElement","setContents","html","isVisible","getSelection","removeAllRanges","selection","createRange","empty","removeClass","addClass","each","index","element","data","name","extraclass","toggleClassList","toggleclass","split","toggleClass","click","jquery","3","jQuery","./components/flashmessage/FlashMessage.js","./components/popup/popup.js"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\n/**\n * Flash message constructor\n *\n * @returns {FlashMessage}\n */\n\nvar FlashMessage = function () {\n\n    // Create the FlashMessage object\n    var self = {};\n\n    /**\n     * Message container spacer element\n     *\n     * @type HTMLObject\n     */\n    self.messageSpacerElement = null;\n\n    /**\n     * Message container element\n     *\n     * @type HTMLObject\n     */\n    self.messageElement = null;\n\n    /**\n     * Flash message height in pixels\n     *\n     * @type Number\n     */\n    self.height = 60;\n\n    /**\n     * Closing animation\n     *\n     * @type function\n     */\n    self.animation = null;\n\n    /**\n     * Construct flash message compontent\n     *\n     * HTML contents will be created and added right after menu, or as first element\n     * of the bodywrapper when the menu is disabled\n     *\n     * @param elem Container element for the flash message\n     * @returns {FlashMessage}\n     */\n    self.init = function (elem) {\n\n        var messageContainer;\n        var messageText;\n        var menu;\n        var bodyWrapper;\n        var isClicked = true;\n\n        self.messageSpacerElement = elem\n                || window.document.getElementById(\"jsFlashMessage\");\n\n        // Create message spacer element when it does not exist yet\n        if (elem || !self.messageSpacerElement) {\n\n            self.messageSpacerElement = window.document.createElement(\"div\");\n            self.messageSpacerElement.id = \"jsFlashMessage\";\n            self.messageSpacerElement.className = \"flashMessageSpacer\";\n            self.messageSpacerElement.style.display = \"none\";\n\n            self.messageElement = window.document.createElement(\"div\");\n            self.messageElement.id = \"jsFlashMessage\";\n            self.messageElement.style.display = \"none\";\n            self.messageElement.onclick = function () {\n\n                // Hide animation\n                self.animation = setInterval(\n                    function () {\n                        self.hide(isClicked);\n                    },\n                    5\n                );\n\n            };\n\n            messageContainer = window.document.createElement(\"div\");\n            messageContainer.className = \"flashMessageContainer\";\n            self.messageElement.appendChild(messageContainer);\n\n            messageText = window.document.createElement(\"p\");\n            messageContainer.appendChild(messageText);\n\n            // Check if a container element was provided\n            if (elem) {\n\n                // Container element provided, adding to container\n                // Insert flashMessage in the specified container element\n                elem.appendChild(self.messageElement);\n\n            } else {\n\n                // Container element not provided, adding to body / menu\n                // Insert flashMessage right after the menu element so it is\n                // positioned between the menu and the actual page, or as first\n                // element of the bodywrapper when the meny is not present\n                menu = window.document.getElementById(\"invite-navigation-spacer\");\n\n                if (!menu) {\n                    menu = window.document.getElementById(\"homepageMenuSpacer\");\n                } else {\n                    self.messageElement.style.top = \"116px\";\n                }\n\n                if (menu) {\n\n                    menu.parentNode.insertBefore(\n                        self.messageSpacerElement,\n                        menu.nextSibling\n                    );\n\n                    self.messageSpacerElement.parentNode.insertBefore(\n                        self.messageElement,\n                        self.messageSpacerElement.nextSibling\n                    );\n\n                } else {\n\n                    bodyWrapper = window.document.getElementById(\"bodyWrapper\");\n                    bodyWrapper.insertBefore(\n                        self.messageSpacerElement,\n                        bodyWrapper.firstChild\n                    );\n\n                }\n            }\n\n        } else {\n\n            // Message is placed immediatly after the message spacer\n            self.messageElement = self.messageSpacerElement.nextSibling;\n\n        }\n\n        return self;\n\n    };\n\n    /**\n     * Show a flash message\n     *\n     * @param {String} message               The message to display\n     * @param {String} severity              Message type (Info|Notification|Error)\n     * @param {Number} autoCloseMilliSeconds Time for autoclosing the notification\n     * @returns {FlashMessage}\n     */\n    self.show = function (message, severity, autoCloseMilliSeconds) {\n\n        var severityClassName = \"flashMessage flashMessageLevel\";\n        var timerPassed = true;\n\n        // Define message severity class\n        severity = severity.charAt(0).toUpperCase() +\n                severity.slice(1).toLowerCase();\n\n        if (\"Error\" === severity) {\n            severityClassName += severity;\n        } else if (\"Notification\" === severity) {\n            severityClassName += severity;\n        } else {\n            severityClassName += \"Info\";\n        }\n        self.messageElement.className = severityClassName;\n\n        // Set message\n        self.messageElement.firstChild.firstChild.innerHTML = message;\n\n        // Show the notification\n        self.messageSpacerElement.style.display = \"block\";\n        self.messageElement.style.display = \"block\";\n\n        // Check if dropdown-menu-trigger parameter is set\n        if (undefined !== autoCloseMilliSeconds) {\n            // Auto close parameter is set\n\n            // Set time out of the message\n            setTimeout(function () {\n\n                // Start hide animation\n                self.animation = setInterval(\n                    function () {\n                        self.hide(timerPassed);\n                    },\n                    5\n                );\n\n            }, autoCloseMilliSeconds);\n        }\n\n        return self;\n    };\n\n    /**\n     * Hide flash message\n     *\n     * @param {boolean} clicked\n     * @returns {FlashMessage}\n     */\n    self.hide = function (clicked) {\n\n        if (clicked) {\n\n            // Update height of node\n            self.messageSpacerElement.style.height = self.height + \"px\";\n            self.messageElement.style.height = self.height + \"px\";\n\n            // Update height\n            self.height = Number(self.height - 4);\n\n            if (0 === self.height) {\n\n                // Reset the interval\n                clearInterval(self.animation);\n\n                // Hide the node so node will be completely gone\n                self.messageSpacerElement.style.display = \"none\";\n                self.messageElement.style.display = \"none\";\n\n                // Reset the height of the nodes, so the next flashMessage will show correctly\n                self.height = 60;\n                self.messageSpacerElement.style.height = self.height + 4 + \"px\";\n                self.messageElement.style.height = self.height + \"px\";\n\n            }\n\n        }\n\n        return self;\n\n    };\n\n    return self;\n\n};\n\n// Exposing FlashMessage as CommonJS module\nmodule.exports = FlashMessage;\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\n// ------------------------------------------------------------------------------------------ Component Dependencies\n\nvar $ = require('jquery');\n\n// ------------------------------------------------------------------------------------------ Component Variables\n\nvar COMPONENT_ATTR = \"role='popup'\";\nvar COMPONENT_SELECTOR = \"[\" + COMPONENT_ATTR + \"]\";\n\n// ------------------------------------------------------------------------------------------ Component Definition\n\n/**\n * Popup class\n *\n * @return {Popup}\n */\nvar Popup = function () {\n\n    /**\n     * Reference to this\n     *\n     * @type popup\n     */\n    var self = this;\n\n    /**\n     * Popup background\n     *\n     * @type object\n     */\n    self.background = null;\n\n    /**\n     * Popup\n     *\n     * @type object\n     */\n    self.popup = null;\n\n    /**\n     * Title pane\n     *\n     * @type object\n     */\n    self.titlePane = null;\n\n    /**\n     * Close button\n     *\n     * @type object\n     */\n    self.closeButton = null;\n\n    /**\n     * Content pane\n     *\n     * @type object\n     */\n    self.contentPane = null;\n\n    /**\n     * Button pane\n     *\n     * @type object\n     */\n    self.buttonPane = null;\n\n    /**\n     * Popup name\n     *\n     * @type string\n     */\n    self.popupName = '';\n\n    /**\n     * Function to execute on enter\n     *\n     * @type object\n     */\n    self.onEnter = false;\n\n    /**\n     * Function to execute on close\n     *\n     * @type object\n     */\n    self.onClose = false;\n\n\n    /**\n     * Create or attach background\n     *\n     * @private\n     */\n    self.createBackground = function () {\n\n        // Get background\n        self.background = window.document.getElementById('popupBackground');\n\n        // Whether background is already available\n        if (null === self.background) {\n            // background has not been created yet\n\n            // Create background element\n            var backgroundElement = window.document.createElement('div');\n            backgroundElement.id = 'popupBackground';\n            backgroundElement.style.display = 'none';\n\n            // Add background to body\n            window.document.body.appendChild(backgroundElement);\n\n            // Set background\n            self.background = backgroundElement;\n\n        }\n\n    }\n\n    /**\n     * Create title pane\n     *\n     * @return {void}\n     * @private\n     */\n    self.createTitlePane = function () {\n\n        // Define elements\n        var titlePaneElement = null;\n\n        // Create title pane element\n        titlePaneElement = window.document.createElement('div');\n        titlePaneElement.className = 'popupTitlePane';\n        titlePaneElement.id = self.popupName + 'PopupTitlePane';\n\n        // Set title pane element\n        self.titlePane = titlePaneElement;\n\n        // Add title pane to popup\n        self.popup.appendChild(titlePaneElement);\n\n    }\n\n    /**\n     * Create content pane\n     *\n     * @return {void}\n     * @private\n     */\n    self.createContentPane = function () {\n\n        // define elements\n        var closeButtonElement = null;\n\n        // Create content pane element\n        var contentElement = window.document.createElement('div');\n        contentElement.className = 'popupContentPane';\n        contentElement.id = self.popupName + 'PopupContentPane';\n\n        // Set content pane\n        self.contentPane = contentElement;\n\n        // Create button element\n        closeButtonElement = window.document.createElement('button');\n        closeButtonElement.className = 'iconStarred-close close';\n\n        // Set close button element\n        self.closeButton = closeButtonElement;\n\n        // Add close button to popup\n        self.popup.appendChild(closeButtonElement);\n\n        // Add content pane to popup\n        self.popup.appendChild(contentElement);\n\n    }\n\n    /**\n     * Create button pane\n     *\n     * @return {void}\n     * @private\n     */\n     self.createButtonPane = function () {\n\n        // Create button pane element\n        var buttonBarElement = window.document.createElement('div');\n        buttonBarElement.className = 'popupButtonPane';\n        buttonBarElement.id = self.popupName + 'PopupButtonPane';\n\n        // Set button pane\n        self.buttonPane = buttonBarElement;\n\n        // Add button pane to popup\n        self.popup.appendChild(buttonBarElement);\n\n    }\n\n    /**\n     * Configures popup based on configuration object\n     *\n     * @example\n     *  {\n     *      title: 'example',\n     *      buttons: {\n     *          close: {\n     *              title: 'close this popup',\n     *              class: 'closeButton',\n     *              onclick: function () {\n     *                  popup.toggle();\n     *              }\n     *          }\n     *      }\n     *  }\n     *\n     * @param {object} config Configuration object literal\n     *\n     * @return {void}\n     * @private\n     */\n    self.configure = function (config) {\n\n        // Define functionName\n        var functionName = '';\n        var functionIndex = '';\n\n        // Whether a config object has been provided\n        if (undefined !== config) {\n            // Config object has been set\n\n            // Iterate over object properties\n            for (functionIndex in config) {\n\n                // Whether this is a property directly contained by its object\n                if (config.hasOwnProperty(functionIndex)) {\n\n                    // Construct function name\n                    functionName = 'set' + functionIndex.charAt(0).toUpperCase()\n                        + functionIndex.slice(1);\n\n                    // Whether the function exists\n                    if ('function' === typeof self[functionName]) {\n                        // Function does exist\n\n                        // Call the function with the configured parameter as an\n                        // argument\n                        self[functionName](config[functionIndex]);\n\n                    }\n\n                }\n\n            }\n\n        }\n\n    }\n\n    /**\n     * Enable escape, close and background close listeners to hide popup\n     *\n     * @return {void}\n     * @private\n     */\n    self.enableToggleListeners = function () {\n\n        // Watch key up events\n        window.document.onkeyup = function (event) {\n\n            // Use event parameter when passed, use window.event otherwise\n            // (i.e. FireFox falls back to the later)\n            event = event || window.event;\n\n            // Whether escape is pressed when the popup is visible\n            if (27 === event.keyCode\n                    && 'none' !== self.background.style.display) {\n                // Popup is visible and escape key has been pressed\n\n                // Hide popup\n                self.toggle();\n\n            }\n\n        };\n\n        // Add close background toggle litener\n        self.background.onclick = function(e) {\n            if (e.target.id === \"popupBackground\"){\n              self.toggle();\n            }\n        };\n\n        // Add close button toggle listener\n        self.closeButton.onclick = function () {\n            self.toggle();\n        };\n    }\n\n    /**\n     * Enables onEnter listener. When enter gets pressed the anonymous function\n     * assigned to onEnter will be executed\n     *\n     * @returns {void}\n     * @private\n     */\n    self.enableOnEnterListener = function () {\n\n        // Watch key down events\n        window.document.onkeydown = function (event) {\n\n            // Use event parameter when passed, use window.event otherwise\n            // (i.e. FireFox falls back to the latter)\n            event = event || window.event;\n\n            // Whether enter is pressed when the popup is visible on an element\n            // other than a textarea\n            if (\"none\" !== self.popup.offsetWidth\n                    && 0 < self.popup.offsetWidth\n                    && 13 === event.keyCode\n                    && 'textarea' !== window.document.activeElement.tagName.toLowerCase()\n                    ) {\n                // Popup is visible and enter key has been pressed\n\n                // Prevent default action to be executed\n                event.preventDefault();\n\n                // Trigger onEnter event\n                self.onEnter();\n\n                // Prevent bubble up\n                return false;\n\n            }\n\n        };\n\n    }\n\n    /**\n     * Moves given elementId to the popup content pane\n     *\n     * @param {string} elementId Element to move to content pane\n     * @returns {popup} Implements fluent interface\n     */\n    self.setContentsByElementId = function (elementId) {\n\n        // Get contentElement\n        var contentsElement = window.document.getElementById(elementId);\n\n        // Whether contentsElement is set\n        if (null !== contentsElement) {\n            // ContentsElement has been defined\n\n            // Whether contents are visible\n            if ('none' === contentsElement.style.display) {\n                // Contents are hidden\n\n                // Make contents visible\n                contentsElement.style.display = '';\n\n            }\n\n            // Move contentsElement to content pane\n            self.contentPane.appendChild(contentsElement);\n\n        }\n\n        // Implement fluent interface\n        return self;\n\n    };\n\n    /**\n     * Set popup title\n     *\n     * @param {string} title Popup title displayed at the top of the popup\n     * @return {popup} Implements fluent interface\n     */\n    self.setTitle = function (title) {\n\n        // Define element ID\n        var elementId = self.popupName + 'Title';\n\n            // Define title element\n        var titleElement = document.getElementById(elementId);\n\n        // Check whether the title element exists\n        if (titleElement) {\n            // Title element exists\n\n            // Update title\n            titleElement.innerHTML = title;\n\n            // Implement fluent interface\n            return self;\n\n        }\n\n        // Create header element\n        titleElement = window.document.createElement('h2');\n        titleElement.className = 'popupTitle';\n        titleElement.innerHTML = title;\n        titleElement.id = elementId;\n\n        // Add header to popup\n        self.titlePane.appendChild(titleElement);\n\n        // Move element to be the first element\n        self.titlePane.insertBefore(titleElement, self.titlePane.firstChild);\n\n        // Show title pane\n        self.titlePane.style.display = 'block';\n\n        // Implement fluent interface\n        return self;\n\n    };\n\n    /**\n     * Create button(s) based on object literal. This will remove previously\n     * set buttons\n     *\n     * @param {object} buttons Button class literal\n     * @return {popup} Implements fluent interface\n     */\n    self.setButtons = function (buttons) {\n\n        // Define button element\n        var buttonElement = null,\n            buttonIndex = null;\n\n        // Assert button pane exists when buttons need to be set\n        if (!self.buttonPane) {\n            self.createButtonPane();\n        }\n\n        // Iterate buttons and remove them\n        // @see http://stackoverflow.com/a/3955238 why this is faster than\n        //  this.buttonPane.innerHtml = '';\n        while(self.buttonPane.firstChild) {\n\n            // Remove previously added buttons\n            self.buttonPane.removeChild(self.buttonPane.firstChild);\n\n        }\n\n        // Iterate over buttons\n        for (buttonIndex in buttons) {\n\n            // Whether this property is directly contained by its object\n            if (buttons.hasOwnProperty(buttonIndex)) {\n\n                // Create a new button element\n                buttonElement = window.document.createElement('button');\n\n                // Create button ID\n                buttonElement.id = self.popupName + 'Popup' +\n                buttonIndex.charAt(0).toUpperCase() +\n                buttonIndex.slice(1);\n\n                // Whether button class is defined\n                if (undefined !== buttons[buttonIndex].className) {\n                    // Class has been set\n\n                    // Add button className\n                    buttonElement.className = buttons[buttonIndex].className;\n\n                }\n\n                // Whether button title is defined\n                if (undefined !== buttons[buttonIndex].title) {\n                    // Titla has been set\n\n                    // Set button title\n                    buttonElement.innerHTML = buttons[buttonIndex].title;\n\n                }\n\n                // Whether an onclick is defined\n                if (undefined !== buttons[buttonIndex].onclick) {\n                    // Onclick has been set\n\n                    // Add onclick\n                    buttonElement.onclick = buttons[buttonIndex].onclick;\n\n                }\n\n                // Whether enableOnEnter is defined\n                if (undefined !== buttons[buttonIndex].enableOnEnter) {\n                    // onEnter has been set\n\n                    // Whether default or custom onEnter is defined\n                    if (true === buttons[buttonIndex].enableOnEnter\n                            && undefined !== buttons[buttonIndex].onclick\n                            ) {\n                        // Default onEnter behaviour\n\n                        // Set on enter to be onclick\n                        self.onEnter = buttons[buttonIndex].onclick;\n\n                    } else {\n                        // Custom onEnter behaviour\n\n                        // Set custom onEnter\n                        self.onEnter = buttons[buttonIndex].enableOnEnter;\n\n                    }\n\n                    // Enable listener\n                    self.enableOnEnterListener();\n\n                }\n\n                // Add button to button bar\n                self.buttonPane.appendChild(buttonElement);\n\n            }\n\n        }\n\n        // Implement fluent interface\n        return self;\n\n    };\n\n    /**\n     * Set on close callback function\n     *\n     * @param {Object} callback\n     * @returns {popup}\n     */\n    self.setOnClose = function (callback) {\n\n        // Set on close callback\n        this.onClose = callback;\n\n        // Implement fluent interface\n        return this;\n\n    };\n\n    /**\n     * Create popup\n     *\n     * @param {String} popupName       Popup name, this is used to define its\n     *  scope (should be unique)\n     * @param {Object} config          Configuration Object literal\n     * @param {String} additionalClass Additional styling class\n     *\n     * @return {popup} Implements fluent interface\n     */\n    self.create = function (popupName, config, additionalClass) {\n\n        // Get popup element\n        var popupElement = window.document.getElementById(popupName + 'Popup');\n\n        // Set popup reference name\n        self.popupName = popupName;\n\n        // Check whether div already exists\n        if (null !== popupElement) {\n            // Div already exists\n\n            // Set popup\n            self.popup = popupElement;\n\n            // Initialize background\n            self.createBackground();\n\n            // Implements fluent interface\n            return self;\n\n        }\n\n        // Create popup element\n        popupElement = window.document.createElement('div');\n        popupElement.id = popupName + 'Popup';\n        popupElement.style.display = 'none';\n\n        // Check whether any additional styling class is set\n        if (undefined !== additionalClass) {\n            // Additional class is set\n\n            // Set popup class names\n            popupElement.className = 'popupBox ' + additionalClass;\n\n        } else {\n            // No additional class available\n\n            // Set class name\n            popupElement.className = 'popupBox';\n\n        }\n\n        // Create background\n        self.createBackground();\n\n        // Add popup to body\n        self.background.appendChild(popupElement);\n\n        // Set popup\n        self.popup = popupElement;\n\n        // Create close button\n        self.createTitlePane();\n\n        // Create content pane\n        self.createContentPane();\n\n        // Apply configuration\n        self.configure(config);\n\n        // Implements fluent interface\n        return self;\n\n    };\n\n    /**\n     * Set popup contents\n     *\n     * @param {string} html HTML popup contents to set\n     *\n     * @return {popup} Implements fluent interface\n     */\n    self.setContents = function (html) {\n\n        // Set contents\n        self.contentPane.innerHTML = html;\n\n        // Implements fluent interface\n        return self;\n\n    };\n\n    /**\n     * Whether the popup is visible at the moment\n     *\n     * @returns {Boolean} True when visible, false otherwise\n     */\n    self.isVisible = function () {\n\n        // Return whether the popup is visible\n        return 'none' !== self.popup.style.display;\n\n    };\n\n    self.toggle = function () {\n\n        // Whether the popup is visible\n        if (self.isVisible()) {\n            // Popup is visible\n\n            // Popup won't close when text is selected, deselect all\n            if (window.getSelection) {\n                // all browsers, except IE before version 9\n\n                // Deselect all\n                window.getSelection().removeAllRanges();\n\n            } else if (document.selection.createRange) {\n                // Internet Explorer\n\n                // Create selection range\n                document.selection.createRange();\n\n                // Clear selection\n                document.selection.empty();\n\n            }\n\n            // Check whether close callback is set\n            if (self.onClose) {\n\n                // Execute on close callback\n                self.onClose();\n\n            }\n\n            // Hide popup\n            $('body').removeClass('no-scroll');\n            self.background.style.display = 'none';\n            self.popup.style.display = 'none';\n\n        } else {\n            // Popup is not visible\n\n            $('body').addClass('no-scroll');\n            // Toggle listeners\n            self.enableToggleListeners();\n\n            // Show popup\n            this.background.style.display = '';\n            this.popup.style.display = '';\n\n        }\n\n        // Implement fluent interface\n        return self;\n\n    };\n\n};\n\n$(COMPONENT_SELECTOR).each(function(index, element) {\n\n  \t// Create the Popup object for this element\n    var popup = new Popup();\n\n    // Retrieve configs from data attributes\n    var data = $(element).data();\n\n    // create popup with following configs\n    popup.create(\n      data.name,\n      window[data.config],\n      data.extraclass\n    );\n\n    // toggle classes\n    var toggleClassList = data.toggleclass.split(\" \");\n\n    // bind popup toggle for these classes\n    $.each(toggleClassList, function(i, toggleClass){\n      $('.' + toggleClass).click(function(){\n          popup.toggle();\n      });\n    });\n\n});\n\n\n// Exposing Popup as CommonJS module\nmodule.exports = Popup;\n\n},{\"jquery\":\"jquery\"}],3:[function(require,module,exports){\n'use strict';\n\n// ------------------------------------------------------------------------------------------ Dependencies\n\n// Global objects\nwindow.$ = window.jQuery = require('jquery');\n\n// Generic modules\n\nwindow.FlashMessage = require('./components/flashmessage/FlashMessage.js');\nwindow.Popup = require('./components/popup/popup.js');\n\n\n},{\"./components/flashmessage/FlashMessage.js\":1,\"./components/popup/popup.js\":2,\"jquery\":\"jquery\"}]},{},[3]);\n"]}