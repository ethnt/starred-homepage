{"version":3,"sources":["components.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","inViewport","el","rect","height","window","innerHeight","document","documentElement","clientHeight","width","innerWidth","clientWidth","$","getBoundingClientRect","top","left","bottom","right","inContainer","$el","$parent","parent","position","domLib","2","./components/carousel/carousel","./components/flashmessage/FlashMessage","./components/menu/menu","./components/popup/popup","3","COMPONENT_ATTR","COMPONENT_SELECTOR","CAROUSEL_ITEMS_SELECTOR","CAROUSEL_NAV_SELECTOR","CAROUSEL_ARROWS_PREV_SELECTOR","CAROUSEL_ARROWS_NEXT_SELECTOR","CAROUSEL_ACTIVE_SELECTOR","Carousel","options","self","opts","extend","firstSlide","currentSlideNo","intervalTimer","animationTimeout","targetElement","getElementById","slides","find","children","navs","show","click","preventDefault","previous","next","target","goTo","index","addClass","activeElement","href","attr","location","start","hide","interval","setTimeout","slide","clearTimeout","fadeOut","removeClass","fadeIn","each","element","carousel","jquery","4","FlashMessage","messageSpacerElement","messageElement","animation","init","elem","messageContainer","messageText","menu","bodyWrapper","isClicked","createElement","id","className","style","display","onclick","setInterval","appendChild","parentNode","insertBefore","nextSibling","firstChild","message","severity","autoCloseMilliSeconds","severityClassName","timerPassed","charAt","toUpperCase","slice","toLowerCase","innerHTML","undefined","clicked","Number","clearInterval","5","visible","DROPDOWN_MENU","DROPDOWN_MENU_PARENT","DROPDOWN_PARENT_SUBMENU","SUBMENU_AUTO_CLOSE","MenuHandler","submenu","menutype","breakpoint","this","getOptions","initOptions","setSubMenuEnter","setMenuEnter","setMenuItemClick","setSubMenuClick","setParentMenuClick","setMenuClick","setSubMenuLeave","setMenuLeave","on","menuTimerId","isNaN","hasClass","toggleSubMenu","event","link","stopPropagation","css","outerWidth","menuHoverElement","setBreakPointHandler","getParent","getCurrentdropdown","getBottomPositionDropdown","offset","outerHeight","getScreenBreakingPoint","defaultDropdown","scrollTop","breakpointDropDown","data","key","value","hasOwnProperty","visible-element","6","Popup","background","popup","titlePane","closeButton","contentPane","buttonPane","popupName","onEnter","onClose","createBackground","backgroundElement","body","createTitlePane","titlePaneElement","createContentPane","closeButtonElement","contentElement","createButtonPane","buttonBarElement","configure","config","functionName","functionIndex","enableToggleListeners","onkeyup","keyCode","toggle","enableOnEnterListener","onkeydown","offsetWidth","tagName","setContentsByElementId","elementId","contentsElement","setTitle","title","titleElement","setButtons","buttons","buttonElement","buttonIndex","removeChild","enableOnEnter","setOnClose","callback","create","additionalClass","popupElement","setContents","html","isVisible","getSelection","removeAllRanges","selection","createRange","empty","name","extraclass","toggleClassList","toggleclass","split","toggleClass"],"mappings":"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","file":"components.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar $\n\n/* via https://stackoverflow.com/questions/123999/\n  how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433\n*/\n\nfunction inViewport(el){\n  var height = (window.innerHeight || document.documentElement.clientHeight) /*or $(window).height() */\n    , width = (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n    , rect\n\n  // special bonus for those using jQuery\n  if ($ && el instanceof $) el = el[0]\n\n  rect = el.getBoundingClientRect()\n\n  return (\n      rect.top >= 0\n      && rect.left >= 0\n      && rect.bottom <= height\n      && rect.right <= width\n    )\n}\n\n// via https://stackoverflow.com/questions/6597904/scrollable-div-which-elements-can-be-seen\nfunction inContainer($el, $parent){\n  if (!$) throw new Error('Must have a DOM library')\n\n  $parent || ($parent = $el.parent())\n\n  return $el.position().top + $el.height() > 0 && $el.position().top < $parent.height()\n}\n\n// allow users to set their own DOM library (like jquery), or… not\nmodule.exports = function viewableElement(domLib){\n  $ = domLib\n  return {\n    inViewport: inViewport\n    , inContainer: inContainer\n  }\n}\n\nmodule.exports.$ = $\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\n// ------------------------------------------------------------------------------------------ Modules\n\nrequire('./components/carousel/carousel');\nrequire('./components/menu/menu');\nrequire('./components/flashmessage/FlashMessage');\nrequire('./components/popup/popup');\n\n},{\"./components/carousel/carousel\":3,\"./components/flashmessage/FlashMessage\":4,\"./components/menu/menu\":5,\"./components/popup/popup\":6}],3:[function(require,module,exports){\n/*jslint browser: true*/\n'use strict';\n\n/*\n * Carousel component\n *\n * Example:\n * <div class=\"carousel\" role=\"carousel\">\n *\t<ul class=\"carousel-items\">\n *\t\t<li><img src=\"https://cdn.starred.com/images/homepage/index/Header.png\" /></li>\n *\t\t<li><img src=\"https://cdn.starred.com/images/homepage/index/Header.png\" /></li>\n *  </ul>\n *\t<div class=\"carousel-nav\">\n *\t\t<a href=\"http://www.starred.com\"><img src=\"https://cdn.starred.com/images/homepage/index/Header.png\" /></a> \t\n *\t\t<a href=\"http://www.starred.co.uk\"><img src=\"https://cdn.starred.com/images/homepage/index/Header.png\" /></a>\n *\t</div>\n *  <span class=\"carousel-arrows carousel-arrows-previous iconStarred-arrowRight\"></span>\n *\t<span class=\"carousel-arrows carousel-arrows-next iconStarred-arrowLeft\"></span>\n * </div>\n *\n */\n\n// ------------------------------------------------------------------------------------------ Component Dependencies\n\nvar $ = require('jquery');\n\n// ------------------------------------------------------------------------------------------ Component Variables\n\nvar COMPONENT_ATTR = 'role=\"carousel\"';\nvar COMPONENT_SELECTOR = '[' + COMPONENT_ATTR + ']';\n\nvar CAROUSEL_ITEMS_SELECTOR = '.carousel-items';\nvar CAROUSEL_NAV_SELECTOR = '.carousel-nav';\nvar CAROUSEL_ARROWS_PREV_SELECTOR = '.carousel-arrows-previous';\nvar CAROUSEL_ARROWS_NEXT_SELECTOR = '.carousel-arrows-next';\nvar CAROUSEL_ACTIVE_SELECTOR = '.active';\n\n// ------------------------------------------------------------------------------------------ Component Definition\n\nvar Carousel = function (options) {\n\n\t// Create the Carousel object\n\tvar self = {};\n\n\t// Merge the default options with the provided parameter\n\tvar opts = $.extend({\n\n\t\tfirstSlide: 0,\n\t\tcurrentSlideNo: 0,\n\t\tintervalTimer: 5000,\n\t\tanimationTimeout: 2000,\n\t\ttargetElement: document.getElementById('carousel')\n\n\t}, options);\n\n\t// Get the slides\n\tvar slides = $(opts.targetElement).find(CAROUSEL_ITEMS_SELECTOR)\n\t\t\t\t\t\t\t\t\t  .children();\n\n\t// Get the slide navigation elements\n\tvar navs = $(opts.targetElement).find(CAROUSEL_NAV_SELECTOR)\n\t\t\t\t\t\t\t\t\t.children();\n\n\t// Click handler for the 'previous' arrow\n\t$(opts.targetElement).find(CAROUSEL_ARROWS_PREV_SELECTOR)\n\t\t\t\t\t\t .show()\n\t\t\t\t\t\t .click( function (e) {\n\n\t\t// Prevent default action;\n\t\te.preventDefault();\n\n\t\t// Proceed to the previous slide\n\t\tself.previous();\n\n\t});\n\n\t// Click handler for the 'next' arrow\n\t$(opts.targetElement).find(CAROUSEL_ARROWS_NEXT_SELECTOR)\n\t\t\t\t\t\t .show()\n\t\t\t\t\t\t .click( function(e) {\n\n\t\t// Prevent default action;\n\t\te.preventDefault();\n\n\t\t// Proceed to the next slide\n\t\tself.next();\n\n\t});\n\n\t// Click handler for the navigation links\n\t$(opts.targetElement).find(CAROUSEL_NAV_SELECTOR)\n\t\t\t\t\t\t .click( function(e) {\n\n\t\t// Prevent default action;\n\t\te.preventDefault();\n\n\t\t// Get the parent element of the image to determine position\n\t\tvar parent = $(e.target).parent();\n\n\t\t// Proceed to the selected slide based on element index\n\t\tself.goTo(parent.index());\n\n\t});\n\n\t// Click handler for the slides\n\t$(opts.targetElement).find(CAROUSEL_ITEMS_SELECTOR)\n\t\t\t\t\t\t .addClass('pe')\n\t\t\t\t\t\t .click( function (e) {\n\n\t\t// Prevent default action;\n\t\te.preventDefault();\n\n\t\t// Simulate click event on active navigation item\n\t\tvar activeElement = $(opts.targetElement).find(CAROUSEL_ACTIVE_SELECTOR);\n\n\t\t// Get the location from the anchor tag\n\t\tvar href = activeElement.attr('href');\n\n\t\t// Check if we have a valid location\n\t\tif(href && href != '') {\n\n\t\t\t// Redirect to new location\n\t\t\twindow.location = href;\n\n\t\t}\n\n\t});\n\n\t/**\n\t * Start the Carousel\n\t * @returns Carousel\n\t */\n\tself.start = function () {\n\n\t\t// Hide all slides\n\t\tslides.hide();\n\t\t// Show the first slide\n\t\t$(slides[opts.currentSlideNo]).show();\n\t\t// Activate the first navigation item\n\t\t$(navs[opts.currentSlideNo]).addClass('active');\n\n\t\t// Start the interval\n\t\topts.interval = window.setTimeout(function() { self.next(); }, opts.intervalTimer);\n\n\t\t// Implement fluent interface\n\t\treturn self;\n\n\t};\n\n\t/**\n\t * Go back to the previous item in the Carousel\n\t * @returns Carousel\n\t */\n\tself.previous = function () {\n\n\t\t// Proceed to the previous slide\n\t\tself.goTo(opts.currentSlideNo - 1);\n\n\t\t// Implement fluent interface\n\t\treturn self;\n\n\t}\n\n\t/**\n\t * Continue to the next item in the Carousel\n\t * @returns Carousel\n\t */\n\tself.next = function () {\n\n\t\t// Proceed to the next slide\n\t\tself.goTo(opts.currentSlideNo + 1);\n\n\t\t// Implement fluent interface\n\t\treturn self;\n\n\t};\n\n\t/**\n\t * Go to the specified slide in the Carousel\n\t * @param int slide The slide number to show\n\t * @returns Carousel\n\t */\n\tself.goTo = function (slide) {\n\n\t\t// Remove the current timeout\n\t\tclearTimeout(opts.interval);\n\n\t\t// Hide the current slide\n\t\t$(slides[opts.currentSlideNo]).fadeOut(opts.animationTimeout);\n\t\t$(navs[opts.currentSlideNo]).removeClass('active');\n\n\t\t// Update the current slide\n\t\topts.currentSlideNo = slide;\n\n\t\t// Check if the current slide makes the carousel spin\n\t\tif (opts.currentSlideNo >= slides.length) {\n\n\t\t\t// Move it to the first slide\n\t\t\topts.currentSlideNo = opts.firstSlide;\n\n\t\t} else if (opts.currentSlideNo < opts.firstSlide) {\n\n\t\t\t// Move it to the last slide\n\t\t\topts.currentSlideNo = slides.length - 1;\n\n\t\t}\n\n\t\t// Show the current slide\n\t\t$(slides[opts.currentSlideNo]).fadeIn(opts.animationTimeout);\n\t\t$(navs[opts.currentSlideNo]).addClass('active');\n\n\t\t// Restart the interval\n\t\topts.interval = window.setTimeout(function() { self.next(); }, opts.intervalTimer);\n\n\t\t// Implement fluent interface\n\t\treturn self;\n\n\t};\n\n\t// Return the Carousel object\n\treturn self;\n\n};\n\n// ------------------------------------------------------------------------------------------ Component Initialization\n\n$(COMPONENT_SELECTOR).each(function(index, element) {\n\n\t// Create the Carousel object for this element\n\tvar carousel = new Carousel({\n\t\ttargetElement: element\n\t});\n\n\t// Start the carousel\n\tcarousel.start();\n\n});\n\n// ------------------------------------------------------------------------------------------ Component Exposure\n\nmodule.exports = Carousel;\n},{\"jquery\":\"jquery\"}],4:[function(require,module,exports){\n\"use strict\";\n\n/**\n * Flash message constructor\n *\n * @returns {FlashMessage}\n */\n\nvar FlashMessage = function () {\n\n    // Create the FlashMessage object\n    var self = {};\n\n    /**\n     * Message container spacer element\n     *\n     * @type HTMLObject\n     */\n    self.messageSpacerElement = null;\n\n    /**\n     * Message container element\n     *\n     * @type HTMLObject\n     */\n    self.messageElement = null;\n\n    /**\n     * Flash message height in pixels\n     *\n     * @type Number\n     */\n    self.height = 60;\n\n    /**\n     * Closing animation\n     *\n     * @type function\n     */\n    self.animation = null;\n\n    /**\n     * Construct flash message compontent\n     *\n     * HTML contents will be created and added right after menu, or as first element\n     * of the bodywrapper when the menu is disabled\n     *\n     * @param elem Container element for the flash message\n     * @returns {FlashMessage}\n     */\n    self.init = function (elem) {\n\n        var messageContainer;\n        var messageText;\n        var menu;\n        var bodyWrapper;\n        var isClicked = true;\n\n        self.messageSpacerElement = elem\n                || window.document.getElementById(\"jsFlashMessage\");\n\n        // Create message spacer element when it does not exist yet\n        if (elem || !self.messageSpacerElement) {\n\n            self.messageSpacerElement = window.document.createElement(\"div\");\n            self.messageSpacerElement.id = \"jsFlashMessage\";\n            self.messageSpacerElement.className = \"flashMessageSpacer\";\n            self.messageSpacerElement.style.display = \"none\";\n\n            self.messageElement = window.document.createElement(\"div\");\n            self.messageElement.id = \"jsFlashMessage\";\n            self.messageElement.style.display = \"none\";\n            self.messageElement.onclick = function () {\n\n                // Hide animation\n                self.animation = setInterval(\n                    function () {\n                        self.hide(isClicked);\n                    },\n                    5\n                );\n\n            };\n\n            messageContainer = window.document.createElement(\"div\");\n            messageContainer.className = \"flashMessageContainer\";\n            self.messageElement.appendChild(messageContainer);\n\n            messageText = window.document.createElement(\"p\");\n            messageContainer.appendChild(messageText);\n\n            // Check if a container element was provided\n            if (elem) {\n\n                // Container element provided, adding to container\n                // Insert flashMessage in the specified container element\n                elem.appendChild(self.messageElement);\n\n            } else {\n\n                // Container element not provided, adding to body / menu\n                // Insert flashMessage right after the menu element so it is\n                // positioned between the menu and the actual page, or as first\n                // element of the bodywrapper when the meny is not present\n                menu = window.document.getElementById(\"invite-navigation-spacer\");\n\n                if (!menu) {\n                    menu = window.document.getElementById(\"homepageMenuSpacer\");\n                } else {\n                    self.messageElement.style.top = \"116px\";\n                }\n\n                if (menu) {\n\n                    menu.parentNode.insertBefore(\n                        self.messageSpacerElement,\n                        menu.nextSibling\n                    );\n\n                    self.messageSpacerElement.parentNode.insertBefore(\n                        self.messageElement,\n                        self.messageSpacerElement.nextSibling\n                    );\n\n                } else {\n\n                    bodyWrapper = window.document.getElementById(\"bodyWrapper\");\n                    bodyWrapper.insertBefore(\n                        self.messageSpacerElement,\n                        bodyWrapper.firstChild\n                    );\n\n                }\n            }\n\n        } else {\n\n            // Message is placed immediatly after the message spacer\n            self.messageElement = self.messageSpacerElement.nextSibling;\n\n        }\n\n        return self;\n\n    };\n\n    /**\n     * Show a flash message\n     *\n     * @param {String} message               The message to display\n     * @param {String} severity              Message type (Info|Notification|Error)\n     * @param {Number} autoCloseMilliSeconds Time for autoclosing the notification\n     * @returns {FlashMessage}\n     */\n    self.show = function (message, severity, autoCloseMilliSeconds) {\n\n        var severityClassName = \"flashMessage flashMessageLevel\";\n        var timerPassed = true;\n\n        // Define message severity class\n        severity = severity.charAt(0).toUpperCase() +\n                severity.slice(1).toLowerCase();\n\n        if (\"Error\" === severity) {\n            severityClassName += severity;\n        } else if (\"Notification\" === severity) {\n            severityClassName += severity;\n        } else {\n            severityClassName += \"Info\";\n        }\n        self.messageElement.className = severityClassName;\n\n        // Set message\n        self.messageElement.firstChild.firstChild.innerHTML = message;\n\n        // Show the notification\n        self.messageSpacerElement.style.display = \"block\";\n        self.messageElement.style.display = \"block\";\n\n        // Check if dropdown-menu-trigger parameter is set\n        if (undefined !== autoCloseMilliSeconds) {\n            // Auto close parameter is set\n\n            // Set time out of the message\n            setTimeout(function () {\n\n                // Start hide animation\n                self.animation = setInterval(\n                    function () {\n                        self.hide(timerPassed);\n                    },\n                    5\n                );\n\n            }, autoCloseMilliSeconds);\n        }\n\n        return self;\n    };\n\n    /**\n     * Hide flash message\n     *\n     * @param {boolean} clicked\n     * @returns {FlashMessage}\n     */\n    self.hide = function (clicked) {\n\n        if (clicked) {\n\n            // Update height of node\n            self.messageSpacerElement.style.height = self.height + \"px\";\n            self.messageElement.style.height = self.height + \"px\";\n\n            // Update height\n            self.height = Number(self.height - 4);\n\n            if (0 === self.height) {\n\n                // Reset the interval\n                clearInterval(self.animation);\n\n                // Hide the node so node will be completely gone\n                self.messageSpacerElement.style.display = \"none\";\n                self.messageElement.style.display = \"none\";\n\n                // Reset the height of the nodes, so the next flashMessage will show correctly\n                self.height = 60;\n                self.messageSpacerElement.style.height = self.height + 4 + \"px\";\n                self.messageElement.style.height = self.height + \"px\";\n\n            }\n\n        }\n\n        return self;\n\n    };\n\n    return self;\n\n};\n\n// Exposing FlashMessage as CommonJS module\nmodule.exports = FlashMessage;\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\n\n// ------------------------------------------------------------------------------------------ Component Dependencies\n\nvar $ = require(\"jquery\");\nvar visible = require('visible-element')($);\n\n// ------------------------------------------------------------------------------------------ Component Variables\n\nvar COMPONENT_ATTR = \"role='dropdown-menu'\";\nvar COMPONENT_SELECTOR = \"[\" + COMPONENT_ATTR + \"]\";\n\nvar DROPDOWN_MENU = \".dropdown-menu\";\nvar DROPDOWN_MENU_PARENT = \".dropdown-menu-parent\";\nvar DROPDOWN_PARENT_SUBMENU = \".parentSubmenu\";\nvar SUBMENU_AUTO_CLOSE = \".autoCloseSubMenu\";\n\n// ------------------------------------------------------------------------------------------ Component Definition\n/**\n * Define menu handler\n *\n * @type {MenuHandler}\n */\nvar MenuHandler = function () {\n\n    // Set default options\n    var options = {\n\n        submenu: true,\n        menutype: 'default',\n        breakpoint: false\n\n    };\n\n    return {\n\n        /**\n         * Initialise menu and its event handlers\n         *\n         * @param {HTMLObject} element\n         */\n        init: function (element) {\n\n            // init options handlers\n            this.getOptions(element);\n            this.initOptions(element);\n\n            // Assign menu enter handlers\n            this.setSubMenuEnter(element);\n            this.setMenuEnter(element);\n\n            // Assign menu click handlers\n            this.setMenuItemClick(element);\n            this.setSubMenuClick(element);\n            this.setParentMenuClick(element);\n            this.setMenuClick(element);\n\n            // Assign menu leave handlers\n            this.setSubMenuLeave(element);\n            this.setMenuLeave(element);\n\n        },\n\n        /**\n         * Enter menu\n         *\n         * @param {HTMLObject} element\n         */\n        setMenuEnter: function (element) {\n\n            /**\n             * Watch for dropdown-menu-trigger mouse enter events\n             */\n            $(element).on(\"mouseenter\", \"\", function () {\n\n                // Get timer ID\n                var menuTimerId = $(this).attr(\"data-autoclosetimer\");\n\n                // Check whether a timer ID is available\n                if (!isNaN(menuTimerId)) {\n                    // Timer ID is available\n\n                    // Clear timer\n                    window.clearTimeout(menuTimerId);\n\n                }\n\n            });\n\n        },\n\n        /**\n         * Enter sub menu\n         *\n         * @param {HTMLObject} element\n         */\n        setSubMenuEnter: function (element) {\n\n            /**\n             * Watch for dropdown-menu-trigger mouse enter events\n             */\n            $(element).on(\"mouseenter\", DROPDOWN_PARENT_SUBMENU + \".open\", function () {\n\n                // Get timer ID\n                var menuTimerId = $(this).attr(\"data-autoclosetimer\");\n\n                // Check whether a timer ID is available\n                if (!isNaN(menuTimerId)) {\n                    // Timer ID is available\n\n                    // Clear timer\n                    window.clearTimeout(menuTimerId);\n\n                }\n\n            });\n\n        },\n\n        /**\n         * Menu click\n         *\n         * @param {HTMLObject} element\n         */\n        setMenuClick: function (element) {\n\n            /**\n             * Watch for dropdown-menu-trigger element clicks\n             */\n            $(element).click(function () {\n\n                // Check whether its sub menu is opened and has at least 1 item\n                if (!$(this).hasClass(\"open\")) {\n                    // Sub menu has not been opened\n\n                    // if the mode is strict check wether the list has at least 1 item else just open the menu\n                    if (options.menutype === 'default' || options.menutype === 'strict' && $('ul li', element).length >= 1) {\n                      // Show sub menu\n                      $(DROPDOWN_MENU, this).show();\n\n                      // Sub menu is opened\n                      $(this).addClass(\"open\");\n\n                    }\n\n                } else {\n                    // Submenu is open\n\n                    // Close sub menu\n                    $(DROPDOWN_MENU, this).hide();\n\n                    // Sub menu is closed\n                    $(this).removeClass(\"open\");\n\n                }\n\n                // Prevent event bubbling\n                return false;\n\n            });\n\n        },\n\n        /**\n         * Parent menu click\n         *\n         * @param {HTMLObject} element\n         */\n        setParentMenuClick: function (element) {\n\n            /**\n             * Watch for dropdown-menu-parent click\n             */\n            $(element).on(\"click\", DROPDOWN_MENU_PARENT, function () {\n\n                // Trigger parent to be clicked\n                $(this).parent().click();\n\n                // Prevent event bubbling\n                return false;\n\n            });\n\n        },\n\n        /**\n         * Sub menu click\n         *\n         * @param {HTMLObject} element\n         */\n        setSubMenuClick: function (element) {\n\n            var self = this;\n\n            $(element).on(\"click\", DROPDOWN_PARENT_SUBMENU, function () {\n\n                // Toggle clicked submenu\n                self.toggleSubMenu($(this));\n\n                // Prevent event bubbling\n                return false;\n\n            });\n\n        },\n\n        /**\n         * Process event when a menu item link is clicked\n         *\n         * @param {HTMLObject} element\n         */\n        setMenuItemClick: function (element) {\n\n            /**\n             * Stop event propagation for all link elements contained by the dropdown-menu-trigger\n             * element to prevent accidental menu closing\n             *\n             * @param {Object} event Click event\n             */\n\n            $(\"ul li\", element).on(\"click\", \"a\", function (event) {\n\n                // Get link\n                var link = $(this).attr(\"href\");\n\n                // Fall through when link is not set\n                if (undefined === link || \"#\" === link) {\n                    return;\n                }\n\n                // Link is clicked, so stop propagation\n                event.stopPropagation();\n\n            });\n        },\n\n        /**\n         * Toggle the given sub menu on or off\n         *\n         * @param {Object} element Sub menu jquery element\n         */\n        toggleSubMenu: function (element) {\n\n            // Whether sub menu has been opened\n            if (!element.hasClass(\"open\")) {\n                // Sub menu is closed\n\n                // Position submenu based on parent element\n                element.children(SUBMENU_AUTO_CLOSE).css({\n                    left: element.outerWidth() + 10\n                });\n\n                // Show submenu\n                element.children(SUBMENU_AUTO_CLOSE).show();\n\n                // Sub menu is opened\n                element.addClass(\"open\");\n\n            } else {\n                // Sub menu is open\n\n                // Hide sub menu\n                element.children(SUBMENU_AUTO_CLOSE).hide();\n\n                // Mark sub menu as being closed\n                element.removeClass(\"open\");\n\n            }\n\n        },\n\n        /**\n         * Menu leave\n         *\n         * @param {HTMLObject} element\n         */\n        setMenuLeave: function (element) {\n\n            /**\n             * Watch for dropdown-menu-trigger mouse leave events\n             */\n            $(element).on(\"mouseleave\", function () {\n\n                // Get hovered element\n                var menuHoverElement = $(this);\n\n                // Set a timeout and get its ID\n                var menuTimerId = window.setTimeout(function () {\n\n                    // Check whether sub menu is open\n                    if (menuHoverElement.hasClass(\"open\")) {\n                        // Sub menu is open\n\n                        // Hide dropdown-menu menu\"s\n                        $(DROPDOWN_MENU + \",\" + SUBMENU_AUTO_CLOSE, menuHoverElement).hide();\n\n                        // Close open submenu\n                        $(DROPDOWN_PARENT_SUBMENU, menuHoverElement).removeClass(\"open\");\n\n                        if ($(\".toggleSwitchMenu\", menuHoverElement)) {\n                            $(\"#switchAccount\", menuHoverElement).hide();\n                        }\n\n                        // Sub menu is closed\n                        menuHoverElement.removeClass(\"open\");\n\n                    }\n\n                }, 400);\n\n                // Add timer ID to the hovered element\n                menuHoverElement.attr(\"data-autoclosetimer\", menuTimerId);\n\n                // Prevent event bubbling\n                return false;\n\n            });\n\n        },\n\n         /**\n         * Sub menu leave\n         *\n         * @param {HTMLObject} element\n         */\n        setSubMenuLeave: function (element) {\n\n            var self = this;\n\n            /**\n             * Watch for dropdown-menu-trigger sub menu mouse leave events\n             */\n            $(element).on(\"mouseleave\", DROPDOWN_PARENT_SUBMENU + \".open\", function () {\n\n                // Get hovered element\n                var menuHoverElement = $(this);\n\n                // Set a timeout and get its ID\n                var menuTimerId = window.setTimeout(function () {\n\n                    self.toggleSubMenu(menuHoverElement);\n\n                }, 300);\n\n                // Add timer ID to the hovered element\n                menuHoverElement.attr(\"data-autoclosetimer\", menuTimerId);\n\n            });\n        },\n        /**\n        *\n        *\n        * @param {HTMLObject} element\n        */\n        setBreakPointHandler: function(element){\n\n            $(element).click(function (element) {\n\n                var getParent = $(this);\n                var getCurrentdropdown = $(this).children('.popupDropdown');\n                var getBottomPositionDropdown = getCurrentdropdown.offset().top + getCurrentdropdown.outerHeight();\n                var getScreenBreakingPoint = $(window).height() * 0.85 + 80;\n\n                var defaultDropdown = function() {\n                    getCurrentdropdown.css({\n                        \"position\": \"fixed\",\n                        \"top\": getParent.offset().top + 52 - $(window).scrollTop(),\n                        \"width\": getParent.outerWidth()\n                    }).removeClass('dropdown-arrowBar-4').addClass('dropdown-arrowBar-2');\n                }\n                \n                var breakpointDropDown = function(){\n                    getCurrentdropdown.css({\n                        \"position\": \"fixed\",\n                        \"top\": getParent.offset().top - getCurrentdropdown.outerHeight() - 10 - $(window).scrollTop(),\n                        \"width\": getParent.outerWidth()\n                    }).removeClass('dropdown-arrowBar-2').addClass('dropdown-arrowBar-4');\n                }\n\n                if (getBottomPositionDropdown > getScreenBreakingPoint) {\n                    \n                    breakpointDropDown();\n\n                    // if elements in the container are not visible fallback to default view\n                    if(visible.inContainer($('ul li:first-of-type',getCurrentdropdown),$(getCurrentdropdown))){\n                        defaultDropdown();\n                    }\n\n                } else {\n                    defaultDropdown();\n                }\n\n                return false;\n\n            });\n\n        },\n        /**\n         * Gets element data attributes and maps to options object\n         *\n         * @param {HTMLObject} element\n         */\n        getOptions: function (element) {\n\n            var data = $(element).data();\n\n            $.each(data, function (key, value) {\n\n                if (options.hasOwnProperty(key)) {\n                    options[key] = value;\n                }\n\n            });\n\n        },\n\n        /**\n         * Init options settings\n         *\n         * @param {HTMLObject} element\n         */\n        initOptions: function (element) {\n\n            // Check if event propagation is needed\n            if (options.submenu === true) {\n                $(DROPDOWN_MENU, element).children().on(\"click\", function (event) {\n\n                    event.stopPropagation();\n\n                });\n\n            }\n\n            if (options.breakpoint === true) {\n\n                this.setBreakPointHandler(element);\n\n            }\n        }\n\n    };\n\n};\n\n// ------------------------------------------------------------------------------------------ Component Initialization\n\n$(COMPONENT_SELECTOR).each(function (index, element) {\n\n    // Create the Menu object for this element\n    var menu = new MenuHandler();\n\n    // initialize the menu\n    menu.init(element);\n\n});\n\n// ------------------------------------------------------------------------------------------ Component Exposure\n\nmodule.exports = MenuHandler;\n\n},{\"jquery\":\"jquery\",\"visible-element\":1}],6:[function(require,module,exports){\n\"use strict\";\n\n// ------------------------------------------------------------------------------------------ Component Dependencies\n\nvar $ = require('jquery');\n\n// ------------------------------------------------------------------------------------------ Component Variables\n\nvar COMPONENT_ATTR = \"role='popup'\";\nvar COMPONENT_SELECTOR = \"[\" + COMPONENT_ATTR + \"]\";\n\n// ------------------------------------------------------------------------------------------ Component Definition\n\n/**\n * Popup class\n *\n * @return {Popup}\n */\nvar Popup = function () {\n\n    /**\n     * Reference to this\n     *\n     * @type popup\n     */\n    var self = this;\n\n    /**\n     * Popup background\n     *\n     * @type object\n     */\n    self.background = null;\n\n    /**\n     * Popup\n     *\n     * @type object\n     */\n    self.popup = null;\n\n    /**\n     * Title pane\n     *\n     * @type object\n     */\n    self.titlePane = null;\n\n    /**\n     * Close button\n     *\n     * @type object\n     */\n    self.closeButton = null;\n\n    /**\n     * Content pane\n     *\n     * @type object\n     */\n    self.contentPane = null;\n\n    /**\n     * Button pane\n     *\n     * @type object\n     */\n    self.buttonPane = null;\n\n    /**\n     * Popup name\n     *\n     * @type string\n     */\n    self.popupName = '';\n\n    /**\n     * Function to execute on enter\n     *\n     * @type object\n     */\n    self.onEnter = false;\n\n    /**\n     * Function to execute on close\n     *\n     * @type object\n     */\n    self.onClose = false;\n\n\n    /**\n     * Create or attach background\n     *\n     * @private\n     */\n    self.createBackground = function () {\n\n        // Get background\n        self.background = window.document.getElementById('popupBackground');\n\n        // Whether background is already available\n        if (null === self.background) {\n            // background has not been created yet\n\n            // Create background element\n            var backgroundElement = window.document.createElement('div');\n            backgroundElement.id = 'popupBackground';\n            backgroundElement.style.display = 'none';\n\n            // Add background to body\n            window.document.body.appendChild(backgroundElement);\n\n            // Set background\n            self.background = backgroundElement;\n\n        }\n\n    }\n\n    /**\n     * Create title pane\n     *\n     * @return {void}\n     * @private\n     */\n    self.createTitlePane = function () {\n\n        // Define elements\n        var titlePaneElement = null;\n\n        // Create title pane element\n        titlePaneElement = window.document.createElement('div');\n        titlePaneElement.className = 'popupTitlePane';\n        titlePaneElement.id = self.popupName + 'PopupTitlePane';\n\n        // Set title pane element\n        self.titlePane = titlePaneElement;\n\n        // Add title pane to popup\n        self.popup.appendChild(titlePaneElement);\n\n    }\n\n    /**\n     * Create content pane\n     *\n     * @return {void}\n     * @private\n     */\n    self.createContentPane = function () {\n\n        // define elements\n        var closeButtonElement = null;\n\n        // Create content pane element\n        var contentElement = window.document.createElement('div');\n        contentElement.className = 'popupContentPane';\n        contentElement.id = self.popupName + 'PopupContentPane';\n\n        // Set content pane\n        self.contentPane = contentElement;\n\n        // Create button element\n        closeButtonElement = window.document.createElement('button');\n        closeButtonElement.className = 'iconStarred-close close';\n\n        // Set close button element\n        self.closeButton = closeButtonElement;\n\n        // Add close button to popup\n        self.popup.appendChild(closeButtonElement);\n\n        // Add content pane to popup\n        self.popup.appendChild(contentElement);\n\n    }\n\n    /**\n     * Create button pane\n     *\n     * @return {void}\n     * @private\n     */\n     self.createButtonPane = function () {\n\n        // Create button pane element\n        var buttonBarElement = window.document.createElement('div');\n        buttonBarElement.className = 'popupButtonPane';\n        buttonBarElement.id = self.popupName + 'PopupButtonPane';\n\n        // Set button pane\n        self.buttonPane = buttonBarElement;\n\n        // Add button pane to popup\n        self.popup.appendChild(buttonBarElement);\n\n    }\n\n    /**\n     * Configures popup based on configuration object\n     *\n     * @example\n     *  {\n     *      title: 'example',\n     *      buttons: {\n     *          close: {\n     *              title: 'close this popup',\n     *              class: 'closeButton',\n     *              onclick: function () {\n     *                  popup.toggle();\n     *              }\n     *          }\n     *      }\n     *  }\n     *\n     * @param {object} config Configuration object literal\n     *\n     * @return {void}\n     * @private\n     */\n    self.configure = function (config) {\n\n        // Define functionName\n        var functionName = '';\n        var functionIndex = '';\n\n        // Whether a config object has been provided\n        if (undefined !== config) {\n            // Config object has been set\n\n            // Iterate over object properties\n            for (functionIndex in config) {\n\n                // Whether this is a property directly contained by its object\n                if (config.hasOwnProperty(functionIndex)) {\n\n                    // Construct function name\n                    functionName = 'set' + functionIndex.charAt(0).toUpperCase()\n                        + functionIndex.slice(1);\n\n                    // Whether the function exists\n                    if ('function' === typeof self[functionName]) {\n                        // Function does exist\n\n                        // Call the function with the configured parameter as an\n                        // argument\n                        self[functionName](config[functionIndex]);\n\n                    }\n\n                }\n\n            }\n\n        }\n\n    }\n\n    /**\n     * Enable escape, close and background close listeners to hide popup\n     *\n     * @return {void}\n     * @private\n     */\n    self.enableToggleListeners = function () {\n\n        // Watch key up events\n        window.document.onkeyup = function (event) {\n\n            // Use event parameter when passed, use window.event otherwise\n            // (i.e. FireFox falls back to the later)\n            event = event || window.event;\n\n            // Whether escape is pressed when the popup is visible\n            if (27 === event.keyCode\n                    && 'none' !== self.background.style.display) {\n                // Popup is visible and escape key has been pressed\n\n                // Hide popup\n                self.toggle();\n\n            }\n\n        };\n\n        // Add close background toggle litener\n        self.background.onclick = function(e) {\n            if (e.target.id === \"popupBackground\"){\n              self.toggle();\n            }\n        };\n\n        // Add close button toggle listener\n        self.closeButton.onclick = function () {\n            self.toggle();\n        };\n    }\n\n    /**\n     * Enables onEnter listener. When enter gets pressed the anonymous function\n     * assigned to onEnter will be executed\n     *\n     * @returns {void}\n     * @private\n     */\n    self.enableOnEnterListener = function () {\n\n        // Watch key down events\n        window.document.onkeydown = function (event) {\n\n            // Use event parameter when passed, use window.event otherwise\n            // (i.e. FireFox falls back to the latter)\n            event = event || window.event;\n\n            // Whether enter is pressed when the popup is visible on an element\n            // other than a textarea\n            if (\"none\" !== self.popup.offsetWidth\n                    && 0 < self.popup.offsetWidth\n                    && 13 === event.keyCode\n                    && 'textarea' !== window.document.activeElement.tagName.toLowerCase()\n                    ) {\n                // Popup is visible and enter key has been pressed\n\n                // Prevent default action to be executed\n                event.preventDefault();\n\n                // Trigger onEnter event\n                self.onEnter();\n\n                // Prevent bubble up\n                return false;\n\n            }\n\n        };\n\n    }\n\n    /**\n     * Moves given elementId to the popup content pane\n     *\n     * @param {string} elementId Element to move to content pane\n     * @returns {popup} Implements fluent interface\n     */\n    self.setContentsByElementId = function (elementId) {\n\n        // Get contentElement\n        var contentsElement = window.document.getElementById(elementId);\n\n        // Whether contentsElement is set\n        if (null !== contentsElement) {\n            // ContentsElement has been defined\n\n            // Whether contents are visible\n            if ('none' === contentsElement.style.display) {\n                // Contents are hidden\n\n                // Make contents visible\n                contentsElement.style.display = '';\n\n            }\n\n            // Move contentsElement to content pane\n            self.contentPane.appendChild(contentsElement);\n\n        }\n\n        // Implement fluent interface\n        return self;\n\n    };\n\n    /**\n     * Set popup title\n     *\n     * @param {string} title Popup title displayed at the top of the popup\n     * @return {popup} Implements fluent interface\n     */\n    self.setTitle = function (title) {\n\n        // Define element ID\n        var elementId = self.popupName + 'Title';\n\n            // Define title element\n        var titleElement = document.getElementById(elementId);\n\n        // Check whether the title element exists\n        if (titleElement) {\n            // Title element exists\n\n            // Update title\n            titleElement.innerHTML = title;\n\n            // Implement fluent interface\n            return self;\n\n        }\n\n        // Create header element\n        titleElement = window.document.createElement('h2');\n        titleElement.className = 'popupTitle';\n        titleElement.innerHTML = title;\n        titleElement.id = elementId;\n\n        // Add header to popup\n        self.titlePane.appendChild(titleElement);\n\n        // Move element to be the first element\n        self.titlePane.insertBefore(titleElement, self.titlePane.firstChild);\n\n        // Show title pane\n        self.titlePane.style.display = 'block';\n\n        // Implement fluent interface\n        return self;\n\n    };\n\n    /**\n     * Create button(s) based on object literal. This will remove previously\n     * set buttons\n     *\n     * @param {object} buttons Button class literal\n     * @return {popup} Implements fluent interface\n     */\n    self.setButtons = function (buttons) {\n\n        // Define button element\n        var buttonElement = null,\n            buttonIndex = null;\n\n        // Assert button pane exists when buttons need to be set\n        if (!self.buttonPane) {\n            self.createButtonPane();\n        }\n\n        // Iterate buttons and remove them\n        // @see http://stackoverflow.com/a/3955238 why this is faster than\n        //  this.buttonPane.innerHtml = '';\n        while(self.buttonPane.firstChild) {\n\n            // Remove previously added buttons\n            self.buttonPane.removeChild(self.buttonPane.firstChild);\n\n        }\n\n        // Iterate over buttons\n        for (buttonIndex in buttons) {\n\n            // Whether this property is directly contained by its object\n            if (buttons.hasOwnProperty(buttonIndex)) {\n\n                // Create a new button element\n                buttonElement = window.document.createElement('button');\n\n                // Create button ID\n                buttonElement.id = self.popupName + 'Popup' +\n                buttonIndex.charAt(0).toUpperCase() +\n                buttonIndex.slice(1);\n\n                // Whether button class is defined\n                if (undefined !== buttons[buttonIndex].className) {\n                    // Class has been set\n\n                    // Add button className\n                    buttonElement.className = buttons[buttonIndex].className;\n\n                }\n\n                // Whether button title is defined\n                if (undefined !== buttons[buttonIndex].title) {\n                    // Titla has been set\n\n                    // Set button title\n                    buttonElement.innerHTML = buttons[buttonIndex].title;\n\n                }\n\n                // Whether an onclick is defined\n                if (undefined !== buttons[buttonIndex].onclick) {\n                    // Onclick has been set\n\n                    // Add onclick\n                    buttonElement.onclick = buttons[buttonIndex].onclick;\n\n                }\n\n                // Whether enableOnEnter is defined\n                if (undefined !== buttons[buttonIndex].enableOnEnter) {\n                    // onEnter has been set\n\n                    // Whether default or custom onEnter is defined\n                    if (true === buttons[buttonIndex].enableOnEnter\n                            && undefined !== buttons[buttonIndex].onclick\n                            ) {\n                        // Default onEnter behaviour\n\n                        // Set on enter to be onclick\n                        self.onEnter = buttons[buttonIndex].onclick;\n\n                    } else {\n                        // Custom onEnter behaviour\n\n                        // Set custom onEnter\n                        self.onEnter = buttons[buttonIndex].enableOnEnter;\n\n                    }\n\n                    // Enable listener\n                    self.enableOnEnterListener();\n\n                }\n\n                // Add button to button bar\n                self.buttonPane.appendChild(buttonElement);\n\n            }\n\n        }\n\n        // Implement fluent interface\n        return self;\n\n    };\n\n    /**\n     * Set on close callback function\n     *\n     * @param {Object} callback\n     * @returns {popup}\n     */\n    self.setOnClose = function (callback) {\n\n        // Set on close callback\n        this.onClose = callback;\n\n        // Implement fluent interface\n        return this;\n\n    };\n\n    /**\n     * Create popup\n     *\n     * @param {String} popupName       Popup name, this is used to define its\n     *  scope (should be unique)\n     * @param {Object} config          Configuration Object literal\n     * @param {String} additionalClass Additional styling class\n     *\n     * @return {popup} Implements fluent interface\n     */\n    self.create = function (popupName, config, additionalClass) {\n\n        // Get popup element\n        var popupElement = window.document.getElementById(popupName + 'Popup');\n\n        // Set popup reference name\n        self.popupName = popupName;\n\n        // Check whether div already exists\n        if (null !== popupElement) {\n            // Div already exists\n\n            // Set popup\n            self.popup = popupElement;\n\n            // Initialize background\n            self.createBackground();\n\n            // Implements fluent interface\n            return self;\n\n        }\n\n        // Create popup element\n        popupElement = window.document.createElement('div');\n        popupElement.id = popupName + 'Popup';\n        popupElement.style.display = 'none';\n\n        // Check whether any additional styling class is set\n        if (undefined !== additionalClass) {\n            // Additional class is set\n\n            // Set popup class names\n            popupElement.className = 'popupBox ' + additionalClass;\n\n        } else {\n            // No additional class available\n\n            // Set class name\n            popupElement.className = 'popupBox';\n\n        }\n\n        // Create background\n        self.createBackground();\n\n        // Add popup to body\n        self.background.appendChild(popupElement);\n\n        // Set popup\n        self.popup = popupElement;\n\n        // Create close button\n        self.createTitlePane();\n\n        // Create content pane\n        self.createContentPane();\n\n        // Apply configuration\n        self.configure(config);\n\n        // Implements fluent interface\n        return self;\n\n    };\n\n    /**\n     * Set popup contents\n     *\n     * @param {string} html HTML popup contents to set\n     *\n     * @return {popup} Implements fluent interface\n     */\n    self.setContents = function (html) {\n\n        // Set contents\n        self.contentPane.innerHTML = html;\n\n        // Implements fluent interface\n        return self;\n\n    };\n\n    /**\n     * Whether the popup is visible at the moment\n     *\n     * @returns {Boolean} True when visible, false otherwise\n     */\n    self.isVisible = function () {\n\n        // Return whether the popup is visible\n        return 'none' !== self.popup.style.display;\n\n    };\n\n    self.toggle = function () {\n\n        // Whether the popup is visible\n        if (self.isVisible()) {\n            // Popup is visible\n\n            // Popup won't close when text is selected, deselect all\n            if (window.getSelection) {\n                // all browsers, except IE before version 9\n\n                // Deselect all\n                window.getSelection().removeAllRanges();\n\n            } else if (document.selection.createRange) {\n                // Internet Explorer\n\n                // Create selection range\n                document.selection.createRange();\n\n                // Clear selection\n                document.selection.empty();\n\n            }\n\n            // Check whether close callback is set\n            if (self.onClose) {\n\n                // Execute on close callback\n                self.onClose();\n\n            }\n\n            // Hide popup\n            $('body').removeClass('no-scroll');\n            self.background.style.display = 'none';\n            self.popup.style.display = 'none';\n\n        } else {\n            // Popup is not visible\n\n            $('body').addClass('no-scroll');\n            // Toggle listeners\n            self.enableToggleListeners();\n\n            // Show popup\n            this.background.style.display = '';\n            this.popup.style.display = '';\n\n        }\n\n        // Implement fluent interface\n        return self;\n\n    };\n\n};\n\n$(COMPONENT_SELECTOR).each(function(index, element) {\n\n  \t// Create the Popup object for this element\n    var popup = new Popup();\n\n    // Retrieve configs from data attributes\n    var data = $(element).data();\n\n    // create popup with following configs\n    popup.create(\n      data.name,\n      window[data.config],\n      data.extraclass\n    );\n\n    // toggle classes\n    var toggleClassList = data.toggleclass.split(\" \");\n\n    // bind popup toggle for these classes\n    $.each(toggleClassList, function(i, toggleClass){\n      $('.' + toggleClass).click(function(){\n          popup.toggle();\n      });\n    });\n\n});\n\n\n// Exposing Popup as CommonJS module\nmodule.exports = Popup;\n\n},{\"jquery\":\"jquery\"}]},{},[2]);\n"]}